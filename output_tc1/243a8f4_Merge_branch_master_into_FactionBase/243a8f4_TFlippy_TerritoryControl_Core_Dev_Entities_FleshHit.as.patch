diff --git a/TFlippy_TerritoryControl_Core_Dev/Entities/FleshHit.as b/TFlippy_TerritoryControl_Core_Dev/Entities/FleshHit.as
index 3e8e6e9..b8d7e99 100644
--- a/TFlippy_TerritoryControl_Core_Dev/Entities/FleshHit.as
+++ b/TFlippy_TerritoryControl_Core_Dev/Entities/FleshHit.as
@@ -87,118 +87,135 @@
 	
 	if (this.hasTag("equipment support"))
 	{
-		bool isBullet = (customData == HittersTC::bullet_low_cal || customData == HittersTC::bullet_high_cal || customData == HittersTC::shotgun || customData == HittersTC::railgun_lance);
-		// torso
-		if (this.get_string("equipment_torso") == "bulletproofvest" && customData != HittersTC::radiation)
+		bool isBullet = (
+			customData == HittersTC::bullet_low_cal || customData == HittersTC::bullet_high_cal || 
+			customData == HittersTC::shotgun || customData == HittersTC::railgun_lance);
+		
+		string headname = this.get_string("equipment_head");
+		string torsoname = this.get_string("equipment_torso");
+		string bootsname = this.get_string("equipment_boots");
+		
+		if (headname != "" && this.exists(headname+"_health"))
 		{
 			f32 armorMaxHealth = 25.0f;
-			f32 armorHealth = armorMaxHealth - this.get_f32("bpv_health");
-			f32 ratio = armorHealth / armorMaxHealth;
+			f32 ratio = 0.0f;
 
-			switch (customData)
+			if (headname == "militaryhelmet") armorMaxHealth = 25.0f;
+			else if (headname == "scubagear") armorMaxHealth = 10.0f;
+			else if (headname == "bucket") armorMaxHealth = 10.0f;
+			else if (headname == "pumpkin") armorMaxHealth = 5.0f;
+			else if (headname == "minershelmet") armorMaxHealth = 10.0f;
+
+			if (headname == "militaryhelmet" && customData != HittersTC::radiation)
 			{
-				case HittersTC::bullet_low_cal:
-					ratio *= 0.80f;
-					break;
+				switch (customData)
+				{
+					case HittersTC::bullet_low_cal:
+					case HittersTC::shotgun:
+						ratio = 0.85f;
+						break;
 
-				case HittersTC::bullet_high_cal:
-				case HittersTC::railgun_lance:
-					ratio *= 0.60f;
-					break;
+					case HittersTC::bullet_high_cal:
+					case HittersTC::railgun_lance:
+						ratio = 0.65f;
+						break;
 
-				case HittersTC::shotgun:
-					ratio *= 0.85f;
-					break;
-
-				default:
-					ratio *= 0.40f;
-					break;
+					default:
+						ratio = 0.30f;
+						break;
+				}
 			}
-			
-			this.set_f32("bpv_health", this.get_f32("bpv_health") + (ratio*dmg));
-			f32 playerDamage = Maths::Clamp((1.00f - ratio) * dmg, 0, dmg);
+			else if (headname == "scubagear")
+			{
+				ratio = 0.20f;
+			}
+			else if (!isBullet && customData != HittersTC::radiation)
+			{
+				if (headname == "bucket" || headname == "pumpkin" || headname == "minershelmet")
+					ratio = 0.20f;
+			}
+			f32 armorHealth = armorMaxHealth - this.get_f32(headname+"_health");
+			ratio *= armorHealth / armorMaxHealth;
 
+			this.add_f32(headname+"_health", (ratio*dmg));
+			f32 playerDamage = Maths::Clamp((1.00f - ratio) * dmg, 0, dmg);
 			dmg = playerDamage;
 		}
-		else if (this.get_string("equipment_torso") == "keg" && !isBullet && customData != HittersTC::radiation)
+		if (torsoname != "" && this.exists(torsoname+"_health"))
 		{
-			f32 armorMaxHealth = 7.0f;
-			f32 armorHealth = armorMaxHealth - this.get_f32("keg_health");
-			f32 ratio = armorHealth / armorMaxHealth;
+			f32 armorMaxHealth = 30.0f;
+			f32 ratio = 0.0f;
 
-			if ((customData == Hitters::fire || customData == Hitters::burn || customData == Hitters::explosion || 
-				customData == Hitters::bomb || customData == Hitters::bomb_arrow) && this.get_f32("keg_explode") == 0.0f)
+			if (torsoname == "bulletproofvest") armorMaxHealth = 30.0f;
+			else if (torsoname == "keg") armorMaxHealth = 10.0f;
+
+			if (torsoname == "bulletproofvest" && customData != HittersTC::radiation)
 			{
-				this.set_f32("keg_explode", getGameTime() + (30.0f * 1.0f));
-				this.SetLightRadius(this.get_f32("explosive_radius") * 0.5f);
-				this.getSprite().PlaySound("/Sparkle.ogg", 1.00f, 1.00f);
-				this.getSprite().PlaySound("MigrantScream1.ogg", 1.00f, this.getSexNum() == 0 ? 1.0f : 2.0f);
-				ratio *= 0.0f;
-			}
-			else ratio *= 0.50f;
-			
-			this.set_f32("keg_health", this.get_f32("keg_health") + (ratio*dmg));
-			f32 playerDamage = Maths::Clamp((1.00f - ratio) * dmg, 0, dmg);
+				switch (customData)
+				{
+					case HittersTC::bullet_low_cal:
+					case HittersTC::shotgun:
+						ratio = 0.85f;
+						break;
 
+					case HittersTC::bullet_high_cal:
+					case HittersTC::railgun_lance:
+						ratio = 0.65f;
+						break;
+
+					default:
+						ratio = 0.40f;
+						break;
+				}
+			}
+			else if (torsoname == "keg" && !isBullet && customData != HittersTC::radiation)
+			{
+				if ((customData == Hitters::fire || customData == Hitters::burn || customData == Hitters::explosion || 
+					customData == Hitters::bomb || customData == Hitters::bomb_arrow) && this.get_f32("keg_explode") == 0.0f)
+				{
+					this.set_f32("keg_explode", getGameTime() + (30.0f * 1.0f));
+					this.SetLightRadius(this.get_f32("explosive_radius") * 0.5f);
+					this.getSprite().PlaySound("/Sparkle.ogg", 1.00f, 1.00f);
+					this.getSprite().PlaySound("MigrantScream1.ogg", 1.00f, this.getSexNum() == 0 ? 1.0f : 2.0f);
+					ratio = 1.0f;
+				}
+				else ratio = 0.50f;
+			}
+			f32 armorHealth = armorMaxHealth - this.get_f32(torsoname+"_health");
+			ratio *= armorHealth / armorMaxHealth;
+
+			this.add_f32(torsoname+"_health", (ratio*dmg));
+			f32 playerDamage = Maths::Clamp((1.00f - ratio) * dmg, 0, dmg);
 			dmg = playerDamage;
 		}
-		// head
-		if (this.get_string("equipment_head") == "militaryhelmet" && customData != HittersTC::radiation)
+
+		if (bootsname != "" && this.exists(bootsname+"_health"))
 		{
-			f32 armorMaxHealth = 20.0f;
-			f32 armorHealth = armorMaxHealth - this.get_f32("mh_health");
-			f32 ratio = armorHealth / armorMaxHealth;
-
-			switch (customData)
+			f32 armorMaxHealth = 10.0f;
+			f32 ratio = 0.0f;
+			if (bootsname == "combatboots") armorMaxHealth = 10.0f;
+			if (bootsname == "combatboots" && customData != HittersTC::radiation)
 			{
-				case HittersTC::bullet_low_cal:
-					ratio *= 0.80f;
-					break;
+				switch (customData)
+				{
+					case Hitters::fall:
+						ratio = 0.30f;
+						break;
 
-				case HittersTC::bullet_high_cal:
-				case HittersTC::railgun_lance:
-					ratio *= 0.60f;
-					break;
-
-				case HittersTC::shotgun:
-					ratio *= 0.85f;
-					break;
-
-				default:
-					ratio *= 0.30f;
-					break;
+					default: ratio = 0.10f;
+						break;
+				}
 			}
-			
-			this.set_f32("mh_health", this.get_f32("mh_health") + (ratio*dmg));
+			f32 armorHealth = armorMaxHealth - this.get_f32(bootsname+"_health");
+			ratio *= armorHealth / armorMaxHealth;
+
+			this.add_f32(bootsname+"_health", (ratio*dmg));
 			f32 playerDamage = Maths::Clamp((1.00f - ratio) * dmg, 0, dmg);
-
-			dmg = playerDamage;
-		}
-		else if (this.get_string("equipment_head") == "bucket" && !isBullet && customData != HittersTC::radiation)
-		{
-			f32 armorMaxHealth = 5.0f;
-			f32 armorHealth = armorMaxHealth - this.get_f32("bucket_health");
-			f32 ratio = armorHealth / armorMaxHealth;
-
-			switch (customData)
-			{
-				case Hitters::fire:
-				case Hitters::burn:
-					ratio *= 0.10f;
-					break;
-
-				default: ratio *= 0.30f;
-					break;
-			}
-			
-			this.set_f32("bucket_health", this.get_f32("bucket_health") + (ratio*dmg));
-			f32 playerDamage = Maths::Clamp((1.00f - ratio) * dmg, 0, dmg);
-
 			dmg = playerDamage;
 		}
 	}
 	
-	if (this.get_f32("crak_effect") > 0) dmg *= 0.30f;
+	// if (this.get_f32("crak_effect") > 0) dmg *= 0.30f;
 	
 	this.Damage(dmg, hitterBlob);
 
